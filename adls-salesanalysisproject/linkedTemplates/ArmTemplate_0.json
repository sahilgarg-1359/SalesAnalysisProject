{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adls-salesanalysisproject"
		},
		"ls_connectDatalakegen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_connectDatalakegen2'"
		},
		"ls_getSaleasSqlData_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_getSaleasSqlData'"
		},
		"ls_connectDatalakegen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stsalestransformdata.dfs.core.windows.net/"
		},
		"ls_getSaleasSqlData_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "db-saleasanalysisdataenginnering.database.windows.net"
		},
		"ls_getSaleasSqlData_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "db-salesdata"
		},
		"ls_getSaleasSqlData_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "SalesProject"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ls_connectDatalakegen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connect sink dataset to copy all data in datalake gen2",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_connectDatalakegen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_connectDatalakegen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_getSaleasSqlData')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Linked service to connect Azure SQL database source to get Sales Table data",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_getSaleasSqlData_properties_typeProperties_server')]",
					"database": "[parameters('ls_getSaleasSqlData_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_getSaleasSqlData_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_getSaleasSqlData_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_dsSalesTableDataFromDatabase')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_getSaleasSqlData",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SchemaName",
						"type": "varchar"
					},
					{
						"name": "TableName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SchemaTableData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_getSaleasSqlData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_dscopyrowdata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_connectDatalakegen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().TableName,'.parquet')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(dataset().SchemaName,'/',dataset().TableName)",
							"type": "Expression"
						},
						"fileSystem": "rowdata"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_connectDatalakegen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copySourceToSinkData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Iterate each table records",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup schema table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup schema table').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Copy each table to gen2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('Select * From ',item().SchemaName,'.',item().TableName)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "df_dsSalesTableDataFromDatabase",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "df_dscopyrowdata",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@item().SchemaName",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup schema table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT  * FROM [dbo].[SchemaTableData]",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "df_dsSalesTableDataFromDatabase",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/df_dsSalesTableDataFromDatabase')]",
				"[concat(variables('factoryId'), '/datasets/df_dscopyrowdata')]"
			]
		}
	]
}